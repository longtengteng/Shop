package com.lnkj.privateshop.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import com.lnkj.privateshop.entity.ShopEmchatBean;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHOP_EMCHAT_BEAN".
*/
public class ShopEmchatBeanDao extends AbstractDao<ShopEmchatBean, String> {

    public static final String TABLENAME = "SHOP_EMCHAT_BEAN";

    /**
     * Properties of entity ShopEmchatBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Head_pic = new Property(0, String.class, "head_pic", false, "HEAD_PIC");
        public final static Property Nickname = new Property(1, String.class, "nickname", false, "NICKNAME");
        public final static Property Emchat_username = new Property(2, String.class, "emchat_username", true, "EMCHAT_USERNAME");
        public final static Property Emchat_password = new Property(3, String.class, "emchat_password", false, "EMCHAT_PASSWORD");
    }


    public ShopEmchatBeanDao(DaoConfig config) {
        super(config);
    }
    
    public ShopEmchatBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHOP_EMCHAT_BEAN\" (" + //
                "\"HEAD_PIC\" TEXT," + // 0: head_pic
                "\"NICKNAME\" TEXT," + // 1: nickname
                "\"EMCHAT_USERNAME\" TEXT PRIMARY KEY NOT NULL ," + // 2: emchat_username
                "\"EMCHAT_PASSWORD\" TEXT);"); // 3: emchat_password
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHOP_EMCHAT_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ShopEmchatBean entity) {
        stmt.clearBindings();
 
//        String head_pic = entity.getHead_pic();
//        if (head_pic != null) {
//            stmt.bindString(1, head_pic);
//        }

//        String nickname = entity.getNickname();
//        if (nickname != null) {
//            stmt.bindString(2, nickname);
//        }
//
//        String emchat_username = entity.getEmchat_username();
//        if (emchat_username != null) {
//            stmt.bindString(3, emchat_username);
//        }
//
//        String emchat_password = entity.getEmchat_password();
//        if (emchat_password != null) {
//            stmt.bindString(4, emchat_password);
//        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ShopEmchatBean entity) {
        stmt.clearBindings();
 
//        String head_pic = entity.getHead_pic();
//        if (head_pic != null) {
//            stmt.bindString(1, head_pic);
//        }
//
//        String nickname = entity.getNickname();
//        if (nickname != null) {
//            stmt.bindString(2, nickname);
//        }
//
//        String emchat_username = entity.getEmchat_username();
//        if (emchat_username != null) {
//            stmt.bindString(3, emchat_username);
//        }
//
//        String emchat_password = entity.getEmchat_password();
//        if (emchat_password != null) {
//            stmt.bindString(4, emchat_password);
//        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2);
    }    

    @Override
    public ShopEmchatBean readEntity(Cursor cursor, int offset) {
//        ShopEmchatBean entity = new ShopEmchatBean(
//            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // head_pic
//            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // nickname
//            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // emchat_username
//            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // emchat_password
//        );
        return null;
    }
     
    @Override
    public void readEntity(Cursor cursor, ShopEmchatBean entity, int offset) {
//        entity.setHead_pic(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
//        entity.setNickname(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
//        entity.setEmchat_username(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
//        entity.setEmchat_password(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
     }
    
    @Override
    protected final String updateKeyAfterInsert(ShopEmchatBean entity, long rowId) {
//        return entity.getEmchat_username();
        return null;
    }
    
    @Override
    public String getKey(ShopEmchatBean entity) {
        if(entity != null) {
//            return entity.getEmchat_username();
        } else {
            return null;
        }
        return null;
    }

    @Override
    public boolean hasKey(ShopEmchatBean entity) {
//        return entity.getEmchat_username() != null;
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
